<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" default="build">

	<taskdef resource="checkstyletask.properties" classpath="${checkstyle.jar}" />
	<property file="build.properties" />


	<target name="resolve" description="Resolve and Retrieve with ivy">
		<mkdir dir="${lib.dir}" />
		<ivy:resolve />
		<ivy:cachepath pathid="default.classpath" />
		<ivy:retrieve sync="true" type="jar" />
	</target>

	<target name="compile" depends="resolve" description="Compile">
		<mkdir dir="${build.classes}" />
		<mkdir dir="${runnable.dir}" />

		<javac srcdir="${src.main}/java" destdir="${build.classes}">
			<classpath refid="default.classpath" />
		</javac>
		<copy todir="${build.classes}" overwrite="false">
			<fileset dir="${src.main}/java">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.main}/resources">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="compile" description="Pack project to jar">
		<jar destfile="${runnable.dir}/${runnable.file.name}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${manifest.main.class}" />
				<attribute name="Class-Path" value="${manifest.class.path}" />
			</manifest>
			<fileset dir="${build.classes}" />
		</jar>
		<copy todir="${runnable.dir}/lib" overwrite="false">
			<fileset dir="lib">
				<include name="**/*" />
			</fileset>
		</copy>
		<echo file="${runnable.dir}/${runnable.file.name}.bat" message="java -jar ${runnable.file.name}.jar" />
	</target>

	<target name="clean">
		<delete dir="${lib.dir}" />
		<delete dir="${build.classes}" />
		<delete dir="${runnable.dir}" />
	</target>




	<target name="init-ivy" depends="download-ivy" description="Automatically ivy install">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />

		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="download-ivy" unless="offline">

		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>



	<target name="javadoc" description="Generating documentation">
		<javadoc destdir="${javadoc}">
			<sourcepath location="${src.main.java}" />
			<classpath location="${build.classes}" />
		</javadoc>
	</target>




	<target name="checkstyle" depends="resolve" description="Checks that we are using consistant well formed style.">
		<mkdir dir="${build}" />
		<checkstyle config="${checkstyle.config.file}" failOnViolation="false">
			<fileset dir="${src.main}" includes="**/*.java" />
			<formatter type="xml" toFile="${checkstyle.result.file}" />
		</checkstyle>
	</target>


	<path id="cobertura.classpath">
		<fileset dir="${lib.dir}">
			<include name="cobertura-1.9.4.jar" />
			<include name="*.jar" />
		</fileset>
	</path>


	<target name="prepare_cobertura" depends="build">
		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<cobertura-instrument todir="${cobertura.instruments}">

			<fileset dir="${build.classes}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="cobertura" depends="prepare_cobertura"  description="create code coverage report">
		<cobertura-report format="html" destdir="${cobertura.coveragereport}" >
			<fileset dir="${src.main}">
				<include name="**/*.java" />
				<exclude name="**/*Stub.java" />
			</fileset>
		</cobertura-report>
	</target>


</project>